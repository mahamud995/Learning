Creating separate configuration files for brokers

To run multiple brokers on same computer , you need to server properties for each broker. Default configuration file is located in config folder.
Server.properties   . For 3 brokers we will 3 different copies of server.properties  file.   (server0.properties , server1.properties , server2.properties)

Each broker on same computer must have   1. Unique port  2. Unique Broker ID  3. Unique log directory
   
server0.properties  => 

broker.id=0   (unique id)  ,  default port : 9092  , logs  = /tmp/kafka-logs-0

server1.properties  => 

broker.id=1   (unique id)  ,  default port : 9093 (listeners=PLAINTEXT://:9093)  , logs  = /tmp/kafka-logs-1


serve2.properties  => 

broker.id=2   (unique id)  ,  default port : 9094 (listeners=PLAINTEXT://:9094)  , logs  = /tmp/kafka-logs-2


Launching three brokers

Zookeeper
bin/windows/zookeeper-server-start.bat  config/zookeeper.properties

Multiple brokers 

bin/windows/kafka-server-start.bat config/server0.properties
bin/windows/kafka-server-start.bat config/server1.properties
bin/windows/kafka-server-start.bat config/server2.properties

How are we able to verify which brokers are currently present in the cluster?

GET INFORMATION FROM ZOOKEEPER ABOUT ACTIVE BROKER IDS
bin/windows/zookeeper-shell.bat localhost:2181 ls /brokers/ids


GET INFORMATION FROM ZOOKEEPER ABOUT SPECIFIC BROKER BY ID
bin/windows/zookeeper-shell.bat localhost:2181 get /brokers/ids/0


Creating multiple partition topic in the kafka cluster

bin/windows/kafka-topics.bat  --bootstrap-server localhost:9092,localhost:9093,localhost:9094  --create --replication-factor 1 --partitions 5 --topic cars  (partitions are spread across three brokers)

Producing and consuming messages in the cluster

bin/windows/kafka-console-producer.bat  --broker-list localhost:9092,localhost:9093,localhost:9094 --topic cars
bin/windows/kafka-console-consumer --bootstrap-server localhost:9092,localhost:9093,localhost:9094 --topic cars 

Simulating broker failure in the cluster

stop any one broker . Now check with below command how many brokers are running . 
Now only two brokers are running.


Run console consumer . Now you can consume only three messages and a bunch of warnings . That 2 partitions have leader brokers without a matching listener.
This tells us there are two partitions that are not available and we are not able to read messages from those partitions.

As we receive 3 messages out of 5. so 2 messages are lost.

As broker-2 is down.


Here you can see we have lost the messages as broker was down. As replication factor is one. That means messages are not replicated in other brokers.
Suppose broker-2 is up again .